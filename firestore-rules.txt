// firestore.rules
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Check if user is authenticated and has admin role
    function isAdmin() {
      return request.auth != null && 
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Topics collection
    match /topics/{topicId} {
      // Anyone can read topics
      allow read: if true;
      // Only admins can create, update, or delete topics
      allow create, update, delete: if isAdmin();
    }
    
    // Tips collection
    match /tips/{tipId} {
      // Anyone can read approved tips
      allow read: if resource.data.approved == true;
      // Only admins can read unapproved tips
      allow read: if isAdmin();
      // Anyone can create a tip
      allow create: if true;
      // Only admins can update or delete tips
      allow update, delete: if isAdmin();
    }
    
    // Chat messages collection
    match /chatMessages/{messageId} {
      // Anyone can read and create chat messages
      allow read, create: if true;
      // No one can update chat messages
      allow update: if false;
      // Only admins can delete messages
      allow delete: if isAdmin();
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read their own document
      allow read: if request.auth != null && request.auth.uid == userId;
      // Only admins can create, update, or delete user documents
      allow create, update, delete: if isAdmin();
    }
  }
}
